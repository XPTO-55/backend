version: "3.7"
services:
  # nome serviço do docker que terá um container
  database:
    # nome da imagem do container
    image: mysql
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    command: --default-authentication-plugin=mysql_native_password
    # Opção que caso de erro no container ele restarte automaticamente
    restart: always
    # Indicação de onde está o arquivo de configuração
    env_file:
      - .env.dev
    # Abertura de porta do container para se rusado externamente
    ports:
      - "3306:3306"
    # Uso do volume para persistência dos dados armazenados (Como se fosse um HD para salvar os dados)
    volumes:
      - mysqlvol:/var/lib/mysql
    # Definição de qual rede aquele serviço estará utilizando
    networks:
      - mysql-compose-network
  postgres:
    # nome da imagem do container
    image: postgres
    restart: always
    # Indicação de onde está o arquivo de configuração
    #    env_file:
    #      - .env.dev
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "cpa"
    # Abertura de porta do container para se rusado externamente
    ports:
      - "5432:5432"
    # Uso do volume para persistência dos dados armazenados (Como se fosse um HD para salvar os dados)
    volumes:
      - pgdata:/var/lib/postgrespers
    # Definição de qual rede aquele serviço estará utilizando
#    networks:
#      - postgres-compose-network
# Criação dos volumes (HDs) dos serviços
volumes:
  mysqlvol: { }
  pgdata: { }
# Criação das redes dos serviços
networks:
  mysql-compose-network:
    driver: bridge
  postgres-compose-network:
    driver: bridge